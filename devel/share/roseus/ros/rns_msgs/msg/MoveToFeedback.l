;; Auto-generated. Do not edit!


(when (boundp 'rns_msgs::MoveToFeedback)
  (if (not (find-package "RNS_MSGS"))
    (make-package "RNS_MSGS"))
  (shadow 'MoveToFeedback (find-package "RNS_MSGS")))
(unless (find-package "RNS_MSGS::MOVETOFEEDBACK")
  (make-package "RNS_MSGS::MOVETOFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude MoveToFeedback.msg.html


(defclass rns_msgs::MoveToFeedback
  :super ros::object
  :slots (_recalculation _obstacleIndex _obstacleDistance _waypoint _moverState _msg _path ))

(defmethod rns_msgs::MoveToFeedback
  (:init
   (&key
    ((:recalculation __recalculation) nil)
    ((:obstacleIndex __obstacleIndex) 0)
    ((:obstacleDistance __obstacleDistance) 0.0)
    ((:waypoint __waypoint) 0)
    ((:moverState __moverState) 0)
    ((:msg __msg) "")
    ((:path __path) (instance rns_msgs::AnnotatedPath :init))
    )
   (send-super :init)
   (setq _recalculation __recalculation)
   (setq _obstacleIndex (round __obstacleIndex))
   (setq _obstacleDistance (float __obstacleDistance))
   (setq _waypoint (round __waypoint))
   (setq _moverState (round __moverState))
   (setq _msg (string __msg))
   (setq _path __path)
   self)
  (:recalculation
   (&optional __recalculation)
   (if __recalculation (setq _recalculation __recalculation)) _recalculation)
  (:obstacleIndex
   (&optional __obstacleIndex)
   (if __obstacleIndex (setq _obstacleIndex __obstacleIndex)) _obstacleIndex)
  (:obstacleDistance
   (&optional __obstacleDistance)
   (if __obstacleDistance (setq _obstacleDistance __obstacleDistance)) _obstacleDistance)
  (:waypoint
   (&optional __waypoint)
   (if __waypoint (setq _waypoint __waypoint)) _waypoint)
  (:moverState
   (&optional __moverState)
   (if __moverState (setq _moverState __moverState)) _moverState)
  (:msg
   (&optional __msg)
   (if __msg (setq _msg __msg)) _msg)
  (:path
   (&rest __path)
   (if (keywordp (car __path))
       (send* _path __path)
     (progn
       (if __path (setq _path (car __path)))
       _path)))
  (:serialization-length
   ()
   (+
    ;; bool _recalculation
    1
    ;; int32 _obstacleIndex
    4
    ;; float32 _obstacleDistance
    4
    ;; int32 _waypoint
    4
    ;; int32 _moverState
    4
    ;; string _msg
    4 (length _msg)
    ;; rns_msgs/AnnotatedPath _path
    (send _path :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _recalculation
       (if _recalculation (write-byte -1 s) (write-byte 0 s))
     ;; int32 _obstacleIndex
       (write-long _obstacleIndex s)
     ;; float32 _obstacleDistance
       (sys::poke _obstacleDistance (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; int32 _waypoint
       (write-long _waypoint s)
     ;; int32 _moverState
       (write-long _moverState s)
     ;; string _msg
       (write-long (length _msg) s) (princ _msg s)
     ;; rns_msgs/AnnotatedPath _path
       (send _path :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _recalculation
     (setq _recalculation (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; int32 _obstacleIndex
     (setq _obstacleIndex (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; float32 _obstacleDistance
     (setq _obstacleDistance (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; int32 _waypoint
     (setq _waypoint (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _moverState
     (setq _moverState (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _msg
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _msg (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; rns_msgs/AnnotatedPath _path
     (send _path :deserialize buf ptr-) (incf ptr- (send _path :serialization-length))
   ;;
   self)
  )

(setf (get rns_msgs::MoveToFeedback :md5sum-) "e5d103605c7fc4819d625a164ef95674")
(setf (get rns_msgs::MoveToFeedback :datatype-) "rns_msgs/MoveToFeedback")
(setf (get rns_msgs::MoveToFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Progress
bool recalculation
int32 obstacleIndex
float32 obstacleDistance
# Current waypoint, if there is a waypoint path
int32 waypoint
# Mover state
int32 moverState
# Message for status update
string msg
# Current path
rns_msgs/AnnotatedPath path

================================================================================
MSG: rns_msgs/AnnotatedPath
std_msgs/Header header

# Path request id. 
int32 id
# Actual path
rns_msgs/Waypoint[] waypoints
# Should mover take care of waypoint directions
bool useDirections
# If path is reversed
bool reversed
================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: rns_msgs/Waypoint
# Desired position
float32 x
float32 y
# desired direction, in radians
float32 angle
# Max velocity for this waypoint, -1 if no limits
float32 maxVelocity
# Max deviation from this waypoint
float32 maxDeviation
# If target position is relevant
bool useDirection
# Max angle deviation
float32 angleDeviation
")



(provide :rns_msgs/MoveToFeedback "e5d103605c7fc4819d625a164ef95674")


